/*
 * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

plugins {
    id "com.github.spotbugs" version "4.0.5"
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id "de.undercouch.download" version "4.0.4"
    id "net.researchgate.release" version "2.8.0"
}

ext.ballerinaLangVersion = project.ballerinaLangVersion
ext.puppycrawlCheckstyleVersion = project.puppycrawlCheckstyleVersion
ext.testngVersion = "6.14.3"
ext.slf4jVersion = "1.7.30"
ext.stdlibIoVersion = project.stdlibIoVersion
ext.stdlibRegexVersion = project.stdlibRegexVersion
ext.stdlibOsVersion = project.stdlibOsVersion
ext.stdlibUuidVersion = project.stdlibUuidVersion
ext.stdlibHttpVersion = project.stdlibHttpVersion

ext.stdlibMimeVersion = project.stdlibMimeVersion
ext.stdlibLogVersion = project.stdlibLogVersion
ext.stdlibAuthVersion = project.stdlibAuthVersion
ext.stdlibCacheVersion = project.stdlibCacheVersion
ext.stdlibTimeVersion = project.stdlibTimeVersion
ext.stdlibFileVersion = project.stdlibFileVersion
ext.stdlibTaskVersion = project.stdlibTaskVersion
ext.stdlibJwtVersion = project.stdlibJwtVersion
ext.stdlibOAuth2Version = project.stdlibOAuth2Version
ext.stdlibEncodingVersion = project.stdlibEncodingVersion

allprojects {
    group = 'org.ballerinalang'
    version = project.version

    apply plugin: 'maven-publish'

    repositories {
        mavenLocal()

        maven {
            url = 'https://maven.wso2.org/nexus/content/repositories/releases/'
        }

        maven {
            url = 'https://maven.wso2.org/nexus/content/groups/wso2-public/'
        }

        maven {
            url = 'https://repo.maven.apache.org/maven2'
        }

        maven {
            url = 'https://maven.pkg.github.com/ballerina-platform/ballerina-lang'
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }

        maven {
            url = 'https://maven.pkg.github.com/ballerina-platform/module-ballerina-io'
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }

        maven {
            url = 'https://maven.pkg.github.com/ballerina-platform/module-ballerina-regex'
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }

        maven {
            url = 'https://maven.pkg.github.com/ballerina-platform/module-ballerina-os'
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }

        maven {
            url = 'https://maven.pkg.github.com/ballerina-platform/module-ballerina-http'
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }

        maven {
            url = 'https://maven.pkg.github.com/ballerina-platform/module-ballerina-file'
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }

        maven {
            url = 'https://maven.pkg.github.com/ballerina-platform/module-ballerina-log'
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }

        maven {
            url = 'https://maven.pkg.github.com/ballerina-platform/module-ballerina-time'
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }

        maven {
            url = 'https://maven.pkg.github.com/ballerina-platform/module-ballerina-cache'
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }

        maven {
            url = 'https://maven.pkg.github.com/ballerina-platform/module-ballerina-auth'
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }

        maven {
            url = 'https://maven.pkg.github.com/ballerina-platform/module-ballerina-crypto'
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }

        maven {
            url = 'https://maven.pkg.github.com/ballerina-platform/module-ballerina-jwt'
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }

        maven {
            url 'https://maven.pkg.github.com/ballerina-platform/module-ballerina-encoding'
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }

        maven {
            url 'https://maven.pkg.github.com/ballerina-platform/module-ballerina-oauth2'
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }
    }
}

subprojects {
    apply plugin: 'java'
    configurations {
        ballerinaStdLibs
    }
    dependencies {
        /* Standard libraries */
        ballerinaStdLibs "org.ballerinalang:io-ballerina:${stdlibIoVersion}"
        ballerinaStdLibs "org.ballerinalang:regex-ballerina:${stdlibRegexVersion}"
        ballerinaStdLibs "org.ballerinalang:os-ballerina:${stdlibOsVersion}"
        ballerinaStdLibs "org.ballerinalang:uuid-ballerina:${stdlibUuidVersion}"

        ballerinaStdLibs "org.ballerinalang:http-ballerina:${stdlibHttpVersion}"
        ballerinaStdLibs "org.ballerinalang:cache-ballerina:${stdlibCacheVersion}"
        ballerinaStdLibs "org.ballerinalang:task-ballerina:${stdlibTaskVersion}"
        ballerinaStdLibs "org.ballerinalang:log-ballerina:${stdlibLogVersion}"
        ballerinaStdLibs "org.ballerinalang:time-ballerina:${stdlibTimeVersion}"

        // Transitive dependencies for HTTP module
        ballerinaStdLibs "org.ballerinalang:file-ballerina:${stdlibFileVersion}"
        ballerinaStdLibs "org.ballerinalang:crypto-ballerina:${stdlibCryptoVersion}"
        ballerinaStdLibs "org.ballerinalang:auth-ballerina:${stdlibAuthVersion}"
        ballerinaStdLibs "org.ballerinalang:mime-ballerina:${stdlibMimeVersion}"
        ballerinaStdLibs "org.ballerinalang:jwt-ballerina:${stdlibJwtVersion}"
        ballerinaStdLibs "org.ballerinalang:oauth2-ballerina:${stdlibOAuth2Version}"
        ballerinaStdLibs "org.ballerinalang:encoding-ballerina:${stdlibEncodingVersion}"
    }
}

def moduleVersion = project.version
if (moduleVersion.indexOf('-') != -1) {
    moduleVersion = moduleVersion.substring(0, moduleVersion.indexOf('-'))
}

release {
    failOnPublishNeeded = false

    buildTasks = ['build']
    versionPropertyFile = 'gradle.properties'
    tagTemplate = 'v$version'

    git {
        requireBranch = "release-${moduleVersion}"
        pushToRemote = 'origin'
    }
}

task build {
    dependsOn('transaction-ballerina:build')
}
